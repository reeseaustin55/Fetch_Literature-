# Fetch Literature

A minimal desktop helper for collecting bibliography PDFs using manual selection or a
scriptable browser.

## How it works

1. Launch the application and paste your bibliography entries (including the DOIs or
   article links) into the **Bibliography entries** text box.
2. Click **Prepare automation dependencies** if you want the in-app helper to install
   Playwright and the bundled Chromium browser into the interpreter that is currently
   running the GUI (no external terminal required). The button is safe to press even
   if everything is already installed—it simply verifies the setup.
3. Pick a downloads folder, then decide how you want to grab the PDF:
   - Leave **Attempt automatic PDF download** unchecked to follow the existing flow.
     After you download the bibliography PDF manually, the app will open a file picker
     so you can select the file from the chosen downloads folder.
   - Check **Attempt automatic PDF download** to let the helper spin up a Playwright
     browser session. It will walk through every link discovered in the bibliography,
     waiting briefly for you to complete authentication if needed, and then try to
     click common “PDF” or “Download” buttons automatically. When a download succeeds
     the file is saved to the configured downloads folder and the manual picker is
     skipped.
4. If automation cannot run or fails to find a PDF link for every entry, the
   application falls back to the manual dialog so you can select the file yourself.

## Installation

You can install everything from inside the GUI by pressing
**Prepare automation dependencies**. The helper runs `python -m pip install
playwright` followed by `python -m playwright install chromium` using the exact
interpreter that launched the app, so PyCharm virtual environments work without
opening a shell.

Prefer to manage dependencies manually? Run the same commands yourself:

```bash
python -m pip install playwright
python -m playwright install chromium
```

Tkinter ships with the CPython standard library on most platforms. If your Python
distribution omits it, install the appropriate OS-specific package.

## Configuration

- **Default downloads directory:** set in code via `FetcherConfig` or by browsing to a
  folder in the UI. The application remembers the folder for the current session.
- **Automatic download toggle:** exposed as a checkbox in the UI and can be set
  programmatically with `FetcherConfig(automation_default=True)` for deployments where
  Playwright is guaranteed to be available.
- **Browser choice:** the automation helper defaults to Playwright’s Chromium engine.
  You can call `attempt_automated_pdf_download(..., browser="firefox")` if you need a
  different backend.

## Development

```bash
python -m compileall fetch_literature
```

The `browser_automation.py` helper uses Playwright’s async APIs; consult the Playwright
[Python documentation](https://playwright.dev/python/) for additional selector ideas.
